i need a way to map xml elements to icons
this can not only help in displaying the elements
but also to map xml elements to actual elements

performance expectations if possible:
how can i make the app more predictable for you

ti kanoume me gateways poy exoun 1 incoming 1 outgoing?

//state.open apo to button clicked anoigokleinei to app
        //data fetched einai sta events pou prokaloun allagh sta dedomena

         // console.time("XML analysis not combined");
                // const calculatedMetrics = calculateAllMetrics(action.payload);
                // console.timeEnd("XML analysis not combined");

                // console.time("XML analysis optimised");
                // const calculatedMetrics = CalculateAllMetricsOptimized(
                //     action.payload
                // );
                // console.timeEnd("XML analysis optimised");
 return {
                    ...state,
                    //analysisData: calculatedMetrics.get("XML DATA COUNT"),
                    xmlData: action.payload,
                    //metrics: calculatedMetrics,
                };
                 return {
                    ...state,
                    //analysisData: calculatedMetrics.get("XML DATA COUNT"),
                    xmlData: action.payload,
                    //metrics: calculatedMetrics,
                };
//? explaining adding and removing Metrics/Categories
//* to add/remove a metric we need the whole path to the metric
    //* to add/remove a category we need the path to the category above
    //* the category we want to remove(thats why for categories we dont need to add in path)
//!this will be used for pools as warning
    // props.displayNotification({
    //     title: "giannhs",
    //     type: "warning",
    //     content: "oh my god",
    //     duration: 6000,
    // });
    props.log("hello");


    // 'app:quit-aborted',
//   'app:quit-allowed',
//   'client:error',
//   'client:ready',
//   'config:get',
//   'config:set',
//   'context-menu:open',
//   'dialog:open-file-error',
//   'dialog:open-file-explorer',
//   'dialog:open-files',
//   'dialog:save-file',
//   'dialog:show',
//   'errorTracking:turnedOff',
//   'errorTracking:turnedOn',
//   'external:open-url',
//   'file:read',
//   'file:read-stats',
//   'file:write',
//   'menu:register',
//   'menu:update',
//   'system-clipboard:write-text',
//   'toggle-plugins',
//   'workspace:restore',
//   'workspace:save',
//   'zeebe:checkConnection',
//   'zeebe:deploy',
//   'zeebe:getGatewayVersion',
//   'zeebe:run'